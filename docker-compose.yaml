version: '3.9'

services:
  pgSQL-db:
    image: postgres:14
    env_file:
       - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST_DOCKER=${POSTGRES_HOST}
      - POSTGRES_SSLMODE=${POSTGRES_SSLMODE}
    ports:
      - "5430:${POSTGRES_PORT}"
    restart: on-failure
    volumes:
      - database-data:/var/lib/postgresql@14/auth/data/
    networks:
          - database

  redis-db:
    image: 'redis:latest'
    env_file:
      - .env
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PORT=${REDIS_PORT}    
      - REDIS_HOST=${REDIS_HOST}    
      - REDIS_PASSWORD=${REDIS_PASSWORD}    
      - REDIS_DB=${REDIS_DB}    
      - REDIS_TIMEOUT=${REDIS_TIMEOUT}    
    ports:
      - "6379:${REDIS_PORT}"
    restart: on-failure
    volumes:
      - database-data:/var/lib/postgresql@14/auth/data/
    networks:
          - database   

  rabbitmq:
    image: "rabbitmq"
    ports:
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
          - rabbitmq 
  cahe:
    build:
        dockerfile: DockerFile   
    ports:
      - 8080:8080     
    tty: true
    depends_on:
      - pgSQL-db 
      - redis-db
      - rabbitmq
    restart: on-failure  
    networks:
      - database
      - rabbitmq

networks:
  database:
    driver: bridge
  rabbitmq:
    driver: bridge  

volumes:
  data:
  database-data:
  rabbitmq_data: